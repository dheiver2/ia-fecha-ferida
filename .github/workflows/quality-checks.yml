name: quality-checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Frontend Lint & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install deps
        run: |
          npm ci
          npm --prefix frontend ci
      - name: Lint (frontend)
        run: |
          npm --prefix frontend run lint
        continue-on-error: true # evitar falha do pipeline at√© unificarmos ESLint
      - name: Build (frontend)
        run: npm --prefix frontend run build

  backend-env:
    name: Backend Env Diagnostic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install backend deps
        run: npm --prefix backend ci
      - name: Env check
        run: node backend/debug-env.js
        env:
          NODE_ENV: test
          PORT: 3001
          GEMINI_API_KEY: placeholder
          JWT_SECRET: testsecret_min_32_chars_please_pad________
          DATABASE_URL: postgres://user:pass@localhost:5432/db
          FRONTEND_URL: http://localhost:8080