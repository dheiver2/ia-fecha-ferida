import React, { useState, useEffect } from 'react';
import { X, ArrowRight, ArrowLeft, CheckCircle, Play, Users, Camera, FileText } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';

interface OnboardingStep {
  id: string;
  title: string;
  description: string;
  icon: React.ReactNode;
  content: React.ReactNode;
  action?: {
    label: string;
    href: string;
  };
}

interface OnboardingProps {
  userType: 'medico' | 'paciente' | 'visitante';
  onComplete: () => void;
  onSkip: () => void;
}

const Onboarding: React.FC<OnboardingProps> = ({ userType, onComplete, onSkip }) => {
  const [currentStep, setCurrentStep] = useState(0);
  const [isVisible, setIsVisible] = useState(true);

  const medicoSteps: OnboardingStep[] = [
    {
      id: 'welcome',
      title: 'Bem-vindo ao Casa Fecha Feridas! üëã',
      description: 'Sua plataforma completa para an√°lise de feridas com IA',
      icon: <CheckCircle className="w-8 h-8 text-green-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Como m√©dico, voc√™ tem acesso a todas as funcionalidades avan√ßadas:
          </p>
          <ul className="space-y-2">
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>An√°lise de feridas com IA</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Teleconsultas com pacientes</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Hist√≥rico completo de an√°lises</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Relat√≥rios m√©dicos detalhados</span>
            </li>
          </ul>
        </div>
      )
    },
    {
      id: 'analise',
      title: 'An√°lise de Feridas com IA üî¨',
      description: 'Fa√ßa upload de imagens e receba an√°lises detalhadas',
      icon: <Camera className="w-8 h-8 text-blue-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Nossa IA analisa imagens de feridas e fornece:
          </p>
          <div className="grid grid-cols-2 gap-3">
            <Badge variant="secondary">Classifica√ß√£o de gravidade</Badge>
            <Badge variant="secondary">Recomenda√ß√µes de tratamento</Badge>
            <Badge variant="secondary">Medi√ß√µes precisas</Badge>
            <Badge variant="secondary">Relat√≥rios detalhados</Badge>
          </div>
          <div className="bg-blue-50 p-4 rounded-lg">
            <p className="text-sm text-blue-700">
              üí° <strong>Dica:</strong> Para melhores resultados, tire fotos com boa ilumina√ß√£o e foque na ferida.
            </p>
          </div>
        </div>
      ),
      action: {
        label: 'Fazer primeira an√°lise',
        href: '/analise'
      }
    },
    {
      id: 'teleconsulta',
      title: 'Teleconsultas Integradas üìπ',
      description: 'Conecte-se com pacientes em videochamadas seguras',
      icon: <Users className="w-8 h-8 text-purple-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Realize consultas remotas com recursos avan√ßados:
          </p>
          <ul className="space-y-2">
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Videochamada HD com chat</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Compartilhamento de tela</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Prescri√ß√µes digitais</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Convites autom√°ticos para pacientes</span>
            </li>
          </ul>
          <div className="bg-purple-50 p-4 rounded-lg">
            <p className="text-sm text-purple-700">
              üîó <strong>Como funciona:</strong> Crie uma sala e envie o c√≥digo para o paciente entrar.
            </p>
          </div>
        </div>
      ),
      action: {
        label: 'Iniciar teleconsulta',
        href: '/teleconsulta'
      }
    },
    {
      id: 'historico',
      title: 'Hist√≥rico e Relat√≥rios üìä',
      description: 'Acompanhe a evolu√ß√£o dos seus pacientes',
      icon: <FileText className="w-8 h-8 text-orange-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Mantenha um registro completo de todas as an√°lises:
          </p>
          <div className="grid grid-cols-1 gap-3">
            <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
              <FileText className="w-5 h-5 text-orange-500" />
              <div>
                <p className="font-medium">Relat√≥rios Detalhados</p>
                <p className="text-sm text-gray-600">Exporta√ß√£o em PDF com an√°lises completas</p>
              </div>
            </div>
            <div className="flex items-center gap-3 p-3 bg-gray-50 rounded-lg">
              <CheckCircle className="w-5 h-5 text-green-500" />
              <div>
                <p className="font-medium">Acompanhamento de Evolu√ß√£o</p>
                <p className="text-sm text-gray-600">Compare an√°lises ao longo do tempo</p>
              </div>
            </div>
          </div>
        </div>
      ),
      action: {
        label: 'Ver hist√≥rico',
        href: '/historico'
      }
    }
  ];

  const pacienteSteps: OnboardingStep[] = [
    {
      id: 'welcome',
      title: 'Bem-vindo! üëã',
      description: 'Acesso r√°pido e seguro √†s teleconsultas',
      icon: <Users className="w-8 h-8 text-blue-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Como paciente, voc√™ pode participar de consultas m√©dicas remotas de forma simples e segura.
          </p>
          <div className="bg-blue-50 p-4 rounded-lg">
            <p className="text-sm text-blue-700">
              üîí <strong>Privacidade garantida:</strong> Suas consultas s√£o criptografadas e seguras.
            </p>
          </div>
        </div>
      )
    },
    {
      id: 'como-entrar',
      title: 'Como Entrar na Consulta üö™',
      description: 'Duas formas simples de acessar',
      icon: <Play className="w-8 h-8 text-green-500" />,
      content: (
        <div className="space-y-4">
          <div className="grid grid-cols-1 gap-4">
            <div className="border border-green-200 p-4 rounded-lg">
              <h4 className="font-medium text-green-700 mb-2">Op√ß√£o 1: Com C√≥digo</h4>
              <p className="text-sm text-gray-600">
                Seu m√©dico enviar√° um c√≥digo. Digite-o na p√°gina inicial para entrar diretamente.
              </p>
            </div>
            <div className="border border-blue-200 p-4 rounded-lg">
              <h4 className="font-medium text-blue-700 mb-2">Op√ß√£o 2: Link Direto</h4>
              <p className="text-sm text-gray-600">
                Clique no link enviado pelo seu m√©dico para entrar automaticamente.
              </p>
            </div>
          </div>
        </div>
      )
    },
    {
      id: 'durante-consulta',
      title: 'Durante a Consulta üí¨',
      description: 'Recursos dispon√≠veis para voc√™',
      icon: <Camera className="w-8 h-8 text-purple-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">Durante a videochamada voc√™ pode:</p>
          <ul className="space-y-2">
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Ligar/desligar c√¢mera e microfone</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Usar o chat para mensagens</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Ver prescri√ß√µes e orienta√ß√µes</span>
            </li>
          </ul>
        </div>
      )
    }
  ];

  const visitanteSteps: OnboardingStep[] = [
    {
      id: 'welcome',
      title: 'Casa Fecha Feridas üè•',
      description: 'Tecnologia m√©dica avan√ßada para cuidado de feridas',
      icon: <CheckCircle className="w-8 h-8 text-blue-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Descubra como nossa plataforma revoluciona o cuidado de feridas com intelig√™ncia artificial.
          </p>
          <div className="grid grid-cols-2 gap-3">
            <Badge variant="outline">IA Avan√ßada</Badge>
            <Badge variant="outline">Teleconsultas</Badge>
            <Badge variant="outline">Relat√≥rios Precisos</Badge>
            <Badge variant="outline">Seguro e Confi√°vel</Badge>
          </div>
        </div>
      )
    },
    {
      id: 'para-medicos',
      title: 'Para M√©dicos üë®‚Äç‚öïÔ∏è',
      description: 'Ferramentas profissionais completas',
      icon: <FileText className="w-8 h-8 text-green-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">Recursos para profissionais de sa√∫de:</p>
          <ul className="space-y-2">
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>An√°lise automatizada de feridas</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Teleconsultas integradas</span>
            </li>
            <li className="flex items-center gap-2">
              <CheckCircle className="w-4 h-4 text-green-500" />
              <span>Hist√≥rico completo de pacientes</span>
            </li>
          </ul>
        </div>
      ),
      action: {
        label: 'Fazer login m√©dico',
        href: '/login'
      }
    },
    {
      id: 'para-pacientes',
      title: 'Para Pacientes üë•',
      description: 'Acesso simples √†s consultas',
      icon: <Users className="w-8 h-8 text-purple-500" />,
      content: (
        <div className="space-y-4">
          <p className="text-gray-600">
            Participe de consultas m√©dicas remotas de forma f√°cil e segura.
          </p>
          <div className="bg-purple-50 p-4 rounded-lg">
            <p className="text-sm text-purple-700">
              üí° <strong>Tem um c√≥digo de consulta?</strong> Digite-o abaixo para entrar diretamente.
            </p>
          </div>
        </div>
      ),
      action: {
        label: 'Entrar com c√≥digo',
        href: '/paciente'
      }
    }
  ];

  const steps = userType === 'medico' ? medicoSteps : userType === 'paciente' ? pacienteSteps : visitanteSteps;

  const nextStep = () => {
    if (currentStep < steps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      handleComplete();
    }
  };

  const prevStep = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleComplete = () => {
    setIsVisible(false);
    setTimeout(() => {
      onComplete();
    }, 300);
  };

  const handleSkip = () => {
    setIsVisible(false);
    setTimeout(() => {
      onSkip();
    }, 300);
  };

  if (!isVisible) return null;

  const currentStepData = steps[currentStep];

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4">
      <Card className={`w-full max-w-2xl transition-all duration-300 ${isVisible ? 'scale-100 opacity-100' : 'scale-95 opacity-0'}`}>
        <CardHeader className="relative">
          <Button
            variant="ghost"
            size="sm"
            className="absolute right-0 top-0"
            onClick={handleSkip}
          >
            <X className="w-4 h-4" />
          </Button>
          
          <div className="flex items-center gap-3">
            {currentStepData.icon}
            <div>
              <CardTitle className="text-xl">{currentStepData.title}</CardTitle>
              <CardDescription>{currentStepData.description}</CardDescription>
            </div>
          </div>
          
          {/* Progress indicator */}
          <div className="flex gap-2 mt-4">
            {steps.map((_, index) => (
              <div
                key={index}
                className={`h-2 flex-1 rounded-full transition-colors ${
                  index <= currentStep ? 'bg-blue-500' : 'bg-gray-200'
                }`}
              />
            ))}
          </div>
        </CardHeader>
        
        <CardContent className="space-y-6">
          {currentStepData.content}
          
          <div className="flex justify-between items-center">
            <Button
              variant="outline"
              onClick={prevStep}
              disabled={currentStep === 0}
              className="flex items-center gap-2"
            >
              <ArrowLeft className="w-4 h-4" />
              Anterior
            </Button>
            
            <span className="text-sm text-gray-500">
              {currentStep + 1} de {steps.length}
            </span>
            
            <div className="flex gap-2">
              {currentStepData.action && (
                <Button
                  variant="outline"
                  onClick={() => window.location.href = currentStepData.action!.href}
                >
                  {currentStepData.action.label}
                </Button>
              )}
              
              <Button onClick={nextStep} className="flex items-center gap-2">
                {currentStep === steps.length - 1 ? 'Finalizar' : 'Pr√≥ximo'}
                <ArrowRight className="w-4 h-4" />
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default Onboarding;